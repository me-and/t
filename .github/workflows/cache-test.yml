name: Caching tests

on: [push, pull_request]

# Ensure there's only a single version of this running in any repo, so one set
# of tests won't create or destroy caches that interfere with another run.
concurrency: caches

jobs:
  clear-caches:
    runs-on: ubuntu-latest
    steps:

      - name: Delete cache entries
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.actions.getActionsCacheList({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 100,
                key: 'a-'
            });
            console.log(response.data.actions_caches);

  create-caches:
    runs-on: ubuntu-latest
    needs: clear-caches
    steps:

      - name: Create a bunch of files to cache
        run: |
          for f in a b c d; do
            head -c64 /dev/random >"$f" &
          done
          wait

      - name: Create cache a
        uses: actions/cache/save@v3
        with:
          key: a-${{ github.run_id }}-${{ github.run_attempt }}-${{ github.job }}-${{ github.action }}
          path: a
      - name: Create cache b
        uses: actions/cache/save@v3
        with:
          key: b-${{ github.run_id }}-${{ github.run_attempt }}-${{ github.job }}-${{ github.action }}
          path: b
      - name: Create cache c
        uses: actions/cache/save@v3
        with:
          key: c-${{ github.run_id }}-${{ github.run_attempt }}-${{ github.job }}-${{ github.action }}
          path: c
      - name: Create cache d
        uses: actions/cache/save@v3
        with:
          key: d-${{ github.run_id }}-${{ github.run_attempt }}-${{ github.job }}-${{ github.action }}
          path: d
